1.  5 операторов (if, if...else, else if..., (?:), switch);

2.  let date = new Date();
    let time = date.getHours();

    (time < 10) ? alert("Доброе утро!") : alert("Добрый день");

3.  Да, так как "0" это не пустая строчка;

4.  (x < 10 && y > 1) // true;
    (x == 5 || y == 5) // false;
    !(x == y) // true;

5.  1) через атрибут тега on<событие>;
    2) через свойство DOM-элемента on<событие>, прописывается через точку;
    3) через addEventListener - самый универсальный, позволяет добавит несколько обработчикова на одно событие элемента;

6.  Запись некорекктна, так как мы присваем не саму функцию обработчику, а её результат, вызывая функцию. 

7.  keyup / keydown;

8.  Event - объект события. Имеет свойства: 
    - type (тип события);
    - target (объект который создал событие); 
    - currentTarget (объект, которому отправляется событие, но поведение можно изменить - перенаправить);
    - timestamp (время, когда произошло событие);
    - clientX / clientY (координаты курсора в момент клика относительно viewport); MouseEvent
    - screenX / screenY (координаты курсора в момент клика относительно экрана монитора или браузера); MouseEvent
    - which (какая кнопка мыши была нажата в цифрах 1, 2 или 3 (левая, средняя(колесо) или правая)); MouseEvent
    - button (то же, что и which, но цифры 0, 1 и 2); MouseEvent
    - altKey, ctrlKey, metaKey и shiftKey (позволяют узнать была ли нажата соответствующая клавиша одновременно с кнопкой мыши / клавиши); MouseEvent / KeyboardEvent
    - keyCode (код введённого символа); KeyboardEvent
    - code (код физической клавиши); KeyboardEvent
    - key (значение символа клавиши). KeyboardEvent

9.  1) == равно по содержанию;
       === равно по содержанию и типу (строго равно);

    2) != - не равно по содержанию;
       !== - не равно по соржанию и типу (строго не равно);

    3) > - больше, чем.


