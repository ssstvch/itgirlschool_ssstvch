1. Какие кавычки можно использовать для создания строк в JS и в чем разница между ними?

    Три вида кавычек: (""), (''), и (``). 
    Первые и вторые ничем не отличаются. В них можно вносить как переменные, так и текст, числа и знаки. Чтобы получилась строка в таких кавычках, используют сложение("Сумма:" + sum + "."). Важно: если в строке нужно выделить что-то в кавычки, то нужно использовать либо кавычки другого вида ("Пример 'использования' кавычек в строке"), либо перед знаком кавычек ставить обратный слеш ("Пример \"использования\" обратного слеша в строке").
    При использовании обратных кавычек, информация внутри воспринимается как строка. Чтобы добавить в такую строку переменную или выражение, нужно внести это в такую конструкцию: ${}. Пример: (`Пример текста с формулой num1 + num2 = ${num1 + num2}`). Также обратные кавычки могут использовать более одной строки в самом коде, в отличие от обычных.

2. Какими методами можно найти подстроку в строке? Приведите пример.

    (ВАЖНО УЧИТЫВАТЬ РЕГИСТР)

    let str = "какая-то рандомная строка в скрипте и какая-то ещё рандромная строка для проверки.";

    str.indexOf("строка"); // результат 19. indexOf() - находит первое вхождение строки и возвращет индекс начала строки.
    str.lastIndexOf("какая-то"); // результат 38. lastIndexOf() - находит последнее вхождение строки и возвращет индекс начала строки.
    str.indexOf("какая-то"); // для сравнения, тут результат 0.
    str.search("рандомная"); // результат 9. работает как indexOf(), но лучше - можно использовать регулярные выражения для поиска 
    str.includes("скрипте"); // в случае совпадение вовзращает true, также можно вторым параметром указать индекс, с которого начинается поиск
    str.match(/[Сс][А-Яа-я]{4}[Аа]/gm) // поиск всех вхожденией подстроки с помощью регулярного выражения (не уверена, что именно это выражение имеет смысл), возвращает массив

3. Самостоятельно разберитесь, зачем нужен специальный символ `\n`?

    Для переноса строки.

4. Напишите код, который делает первый символ заглавным. Например, `"настя"` ⇒ `"Настя"`

    let str = "настя";
    str = str[0].toUpperCase() + str.slice(1);

5. Как создать дату 24 января 2021 года, 22 часа 51 минута? Временная зона – местная.

    new Date(2021, 0, 24, 22, 51);

6. Как посчитать, сколько секунд осталось до завтра?

    let today = new Date();

    let tomorrowYear = today.getFullYear();
    let tomorrowMouth = today.getMonth();
    let tomorrowDay = today.getDate() + 1;

    // даже если будет 32 число и 12(13 по счету) месяц, JS сам исправит дату на нужную (32 на 1 числа следующего месяца, 12 месяц на 0 следующего года)
    let tomorrow = new Date(tomorrowYear, tomorrowMouth, tomorrowDay, 0);


    let time = Math.round((tomorrow - today) / 1000);
    console.log(`До завтра осталось ${time} секунд.`);

7. Как выделить из строки с денежной суммой (например, *120р.* или *99€*) только цифры, т.е. *120 и 99*?

    let str = "(например, *120р.* или *99€*)";

    let nums = str.match(/[0-9]{1,3}/gm);

    for (let num of nums) {
        console.log(num);
    }

8. Зачем нужны функции `join` и `split`?

    'split()' - делит строку по заданному разделителю, указывается в первом параметре (если пустой - строка делится на массив букв), второй параметр не обязателен, в нём указвается максимально количество элементов в массиве. Все что больше просто отбрасывается.
    `join()` - объединяет массив в строку с заданным разделителем, указанном первом параметре.

9. Какой из вариантов округления делает это по математическим правилам?

    Math.round();

10. Как сгенерировать случайное число от 1 до 100? 

    Math.round((Math.random() * 100) = 1);

11. Зачем нужна функция `str.trim()` ?

    Удаляет пробел в начале и конце строки.

12. Что такое флаг?

    В регулярных выражениях флаг - это специальная надстройка регулярного выражения, которая расширяет его функции.