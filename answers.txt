1. Найдите еще три библиотеки (модуля), которые могут быть вам полезны в разработке.
    
    *Например, js-datepicker - для ввода дат, ChartJS - для работы с графиками и datatable для простых и удобных таблиц с пейджингом и сортировкой.*

    gulp - таск-менеджер для автоматизации рутинных процессов (оптимизации, минификации, конкатенирования)
    babel - транспилятор js кода, приводит код ECMAScript 2015+ в обратно совместимую версию JavaScript, которую могут запускать старые движки JavaScript
    Imagemin - оптимизация изображений
    chalk - стилизация сообщений в консоли
    
2. Какие 2 обязательных шага нужно сделать до начала обращения к методам модулей?

    установить Node.js с пакетным менеджером npm
    инициализировать package.json

3. Как узнать, установлен ли у тебя менеджер пакетов **npm**?

    npm -v

4. Зачем нужен блок `finally`? 

    Код в блоке finally выполнится при любом исходе try..catch. Нужен для того, чтобы, например, почистить ресурсы после выполнения try..catch или для безопасного завершения нашего кода, в случае ошибки (код не "вылетит", а сперва выполнит блок finally) 

5. Есть следующий код:
    
    ```jsx
    let user = undefined;
    alert(`Привет, ${user.name}`);
    ```
    
    Как сделать так, чтобы при обращении к нему выводилось внятное сообщение об ошибке "Имя пользователя не заполнено"?

    try {
        let user = "Александра";
        if(user.name !== undefined) {
            alert(`Привет, ${user.name}`);
        } else BAD_CODE()
    } catch (e) {
        throw new SyntaxError(`Имя пользователя не заполненно!`)
    }
    
6. Как сгенерировать собственную ошибку, например, в случае некорректного формата данных?

    throw new ErrorName(`ErrorText`)

7. Какую команду надо ввести, чтобы сгенерировался файл package.json?

    npm init

8. Приведите пример захвата ошибки в случае некорректного преобразования данных
    
    ```jsx
    console.log(parseInt('ыыыы'));
    ```
    try {
        let data = console.log(parseInt('ыыыы'));

        if(data === NuN || data === undefined || data === null) BAD_CODE()
    } catch {
        throw new Error(`Неккоректно преобразованы данные`)
    }


    
9. Изучите документацию к библиотеке moment (https://momentjs.com/) и скажите, как вывести название дня недели по дате?

moment().format('dddd');

10. Что такое сборщик и зачем он нужен? Какие еще бывают сборщики помимо *browserify*?

    Сборщик - инструмент, с помощью которого мы можем собирать проект из множества внешних файлов js/css(scss)/html. Нужен для разработки в команде (ведь у каждого свои файлы, их нужно в конце объединить в один готовый), для разработки по методологии БЭМ, а также для оптимизации, минификации и конкатенирования файлов.

    Я знаю и пользовалась webpack и gulp (по сути сборщиком не является, но есть возможность создавать таски на сборку небольшого проекта). Они отлично работают в паре, если webpack будет собираться проект. а gulp будет автоматизировать различные рутинные задачи.  