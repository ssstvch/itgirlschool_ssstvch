"use strict";
"use strict";

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var giphy_api = {
  endpoint: "https://api.giphy.com/v1/gifs/search?",
  key: "lQJ9BIU9QoeorJeS5Z9xEiyfLAmlGh5E"
},
    search_button = document.querySelector(".form__btn"),
    visible_response = function visible_response() {
  document.querySelector(".response").style.display = "block";
},
    unvisible_response = function unvisible_response() {
  document.querySelector(".response").style.display = "none";
},
    add_response_title = function add_response_title() {
  var e = document.querySelector(".response__title"),
      r = document.querySelector(".form__input").value;
  e.innerHTML = "\u041E\u0442\u0432\u0435\u0442 \u043F\u043E \u0437\u0430\u043F\u0440\u043E\u0441\u0443: ".concat(r);
},
    add_image_src = function add_image_src(e, r) {
  1 == r.alt.split("№")[1] ? r.src = "https://media1.giphy.com/media/".concat(e.data[0].id, "/giphy.gif") : 2 == r.alt.split("№")[1] ? r.src = "https://media1.giphy.com/media/".concat(e.data[1].id, "/giphy.gif") : 3 == r.alt.split("№")[1] && (r.src = "https://media1.giphy.com/media/".concat(e.data[2].id, "/giphy.gif"));
},
    add_error = function add_error() {
  var e = document.createElement("div");
  e.className = "form__error", null === document.querySelector(".form__error") && (document.querySelector(".form__input").after(e), document.querySelector(".form__error").innerHTML = "Ничего не найдено, введите корректный запрос");
},
    delete_error = function delete_error() {
  null != document.querySelector(".form__error") && document.querySelector(".form__error").remove();
},
    send_request_giphy = function send_request_giphy() {
  get_answer_giphy();
},
    show_search_result = function show_search_result(e) {
  add_response_title(), document.querySelector(".response").style.display = "block";
  var r = document.querySelectorAll(".image-container__image");

  var _iterator = _createForOfIteratorHelper(r),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var t = _step.value;
      null != document.querySelector(".form__error") && document.querySelector(".form__error").remove(), 0 != e.data.length ? add_image_src(e, t) : (add_error(), document.querySelector(".response").style.display = "none");
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
};

function get_answer_giphy() {
  return _get_answer_giphy.apply(this, arguments);
}

function _get_answer_giphy() {
  _get_answer_giphy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
    var e, r, t;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            e = document.querySelector(".form__input").value;
            _context.next = 3;
            return fetch("".concat(giphy_api.endpoint, "api_key=").concat(giphy_api.key, "&q=").concat(e, "&limit=3&offset=0&lang=ru"));

          case 3:
            r = _context.sent;
            _context.next = 6;
            return r.json();

          case 6:
            t = _context.sent;
            console.log(t), show_search_result(t);

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _get_answer_giphy.apply(this, arguments);
}

search_button.addEventListener("click", send_request_giphy);